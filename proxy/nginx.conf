
http {

    server {

        listen 8080;
        listen [::]:8080;

        # portion CORS sepcification
        if ($http_origin){
            set $cors_check 'origin_exist';
        }
        if ($http_origin !~ "^https?://($ALLOW_ORIGIN)$") {
            set $cors_check "${cors_check}_unmatched";
        }

        location /webapp {
            # Do NOT allow if origin 'EXISTS' AND is 'NOT MATCHED'
            if ($cors_check = 'origin_exist_unmatched') {
                return 403 'Forbidden Access - $http_origin';
            }
            # If all is good, 'ECHO' origin (do NOT duplicate) and pass
            add_header 'Access-Control-Allow-Origin' $http_origin always;


            proxy_pass http://webapp:8080/api;
        }

        # The asterisk after the tilde (~*) makes the match caseâ€‘insensitive.
        location ~* /webapp/sessions/([^/]+)/refresh/ {
            # "proxy_pass" cannot have URI part in location given by regular expression
            proxy_pass http://webapp:8080;
        }
        
    }

}